install.packages("dados")
install.packages("remotes")
remotes::install_github("cienciadedatos/dados")
library(dados)
library(ggplot2)
library(dplyr)
glimpse(diamante)
diamante %>%
filter(corte == "Bom") %>%
ggplot() +
geom_boxplot(aes(transparencia, preco, fill = transparencia)) +
theme(legend.position = "none") +
labs(title = "Diamantes", subtitle = "Preço e transparência", y = "Preço", x = "Transparência")
0.3 *1700
.15*1700
.05*1700
install.packages("dados")
install.packages("remotes")
remotes::install_github("cienciadedatos/dados")
?glimpse
??glimpse
library(dados)
glimpse(dados_oms)
library(ggplot2)
library(dplyr)
install.packages("ggplot2")
library(ggplot2)
glimpse(dados_oms)
library(dplyr)
install.packages("dplyr")
library(dplyr)
glimpse(dados_oms)
library(dados)
glimpse(dados_oms)
dados_oms
dados <-dados_oms
View(dados)
dados <-pixar_avalicao_publico
View(dados)
# install.packages("devtools")
devtools::install_github("beatrizmilz/mananciais")
install.packages("devtools")
devtools::install_github("beatrizmilz/mananciais")
library(devtools)
install.packages("devtools")
install.packages('pkgdown')
install.packages("ragg")
install.packages(c("broom", "bslib", "callr", "cli", "DBI", "dbplyr", "dtplyr", "evaluate", "gargle", "googlesheets4", "haven", "hms", "htmltools", "httr", "knitr", "lifecycle", "modelr", "processx", "ps", "Rcpp", "readxl", "reprex", "rlang", "rmarkdown", "rstudioapi", "rvest", "sass", "stringi", "stringr", "tibble", "tidyr", "tidyverse", "tinytex", "xfun"))
install.packages(c("broom", "bslib", "callr", "cli", "DBI", "dbplyr", "dtplyr", "evaluate", "gargle", "googlesheets4", "haven", "hms", "htmltools", "httr", "knitr", "lifecycle", "modelr", "processx", "ps", "Rcpp", "readxl", "reprex", "rlang", "rmarkdown", "rstudioapi", "rvest", "sass", "stringi", "stringr", "tibble", "tidyr", "tidyverse", "tinytex", "xfun"))
install.packages(c("broom", "bslib", "callr", "cli", "DBI", "dbplyr", "dtplyr", "evaluate", "gargle", "googlesheets4", "haven", "hms", "htmltools", "httr", "knitr", "lifecycle", "modelr", "processx", "ps", "Rcpp", "readxl", "reprex", "rlang", "rmarkdown", "rstudioapi", "rvest", "sass", "stringi", "stringr", "tibble", "tidyr", "tidyverse", "tinytex", "xfun"))
install.packages(c("broom", "bslib", "callr", "cli", "DBI", "dbplyr", "dtplyr", "evaluate", "gargle", "googlesheets4", "haven", "hms", "htmltools", "httr", "knitr", "lifecycle", "modelr", "processx", "ps", "Rcpp", "readxl", "reprex", "rlang", "rmarkdown", "rstudioapi", "rvest", "sass", "stringi", "stringr", "tibble", "tidyr", "tidyverse", "tinytex", "xfun"))
install.packages(c("broom", "bslib", "callr", "cli", "DBI", "dbplyr", "dtplyr", "evaluate", "gargle", "googlesheets4", "haven", "hms", "htmltools", "httr", "knitr", "lifecycle", "modelr", "processx", "ps", "Rcpp", "readxl", "reprex", "rlang", "rmarkdown", "rstudioapi", "rvest", "sass", "stringi", "stringr", "tibble", "tidyr", "tidyverse", "tinytex", "xfun"))
install.packages("devtools")
View(dados)
View(dados)
dados <- clima
# install.packages("dados")
# install.packages("remotes")
# remotes::install_github("cienciadedatos/dados")
library(dados)
library(ggplot2)
library(dplyr)
dados <- clima
View(dados)
# install.packages("dados")
# install.packages("remotes")
# remotes::install_github("cienciadedatos/dados")
install.packages("nycflights13")
install.packages("nycflights13")
# install.packages("dados")
# install.packages("remotes")
# remotes::install_github("cienciadedatos/dados")
install.packages("nycflights13")
library(nycflights13)
glimpse(weather)
library(dplyr)
??nycflights13
?nycflights13
dados <- weather
View(dados)
dados <- clima
library(dados)
dados <- clima
dados1 <- weather
View(dados)
load("/home/rosana/Documents/Estudos/Curso-R/Introducao a programacao com R/Trabalho Final/Intro/.RData")
View(dados)
View(dados1)
ls(dados1)
??ls
??rm
rm(dados1)
View(dados)
dados$dia == 4 & dados$mes == 2
dados(dadados$dia == 4 & dados$mes == 2)
dados(,dadados$dia == 4 & dados$mes == 2)
dados(dadados$dia == 4 & dados$mes == 2,)
dados[dadados$dia == 4 & dados$mes == 2]
dados[dados$dia == 4 & dados$mes == 2]
dados[dados$dia == 4 & dados$mes == 2,]
data <- dados[dados$dia == 4 & dados$mes == 2,]
View(dados)
data[data$origem = EWR]
data[data$origem = "EWR"]
data[data$origem = "EWR",]
data[data$origem == "EWR",]
data[data$origem == "EWR" | data$ponto_condensacao > 19,]
data[data$origem == "EWR" & data$ponto_condensacao > 19,]
data[data$origem == "EWR" & data$ponto_condensacao > 10,]
unique(dados$origem)
# OS dados dessa tabela são todos referentes ao ano de 2013, então podemos excluir a coluna de ano.
dados = dados[,-"ano"]
# OS dados dessa tabela são todos referentes ao ano de 2013, então podemos excluir a coluna de ano.
dados = dados[,-'ano']
# OS dados dessa tabela são todos referentes ao ano de 2013, então podemos excluir a coluna de ano.
dados = dados[,-`ano`]
# OS dados dessa tabela são todos referentes ao ano de 2013, então podemos excluir a coluna de ano.
dados = dados[,-2]
library(dplyr)
EWR <- mean(filter(dados$temperatura, origem == "EWR"))
filter(dados$temperatura, origem == "EWR")
library(dplyr)
EWR <- mean(filter(dados$temperatura, origem == "EWR"))
filter(dados$temperatura, origem == "EWR")
??filter
data[data$origem == "EWR" & data$ponto_condensacao > 10,]
EWR <- dados[dados$origem == "EWR"]
EWR <-
EWR <- dados[,dados$origem == "EWR"]
EWR <- dados[,dados$origem == "EWR"]
EWR <- dados[dados$origem == "EWR",]
EWR <- mean(dados[dados$origem == "EWR",]$temperatura)
EWR <- mean(dados[dados$origem == "EWR",]$temperatura, na.rm = T)
EWR <- mean(dados[dados$origem == "EWR",]$temperatura, na.rm = T)
JFK <- mean(dados[dados$origem == "JFK",]$temperatura, na.rm = T)
LGA <- mean(dados[dados$origem == "LGA",]$temperatura, na.rm = T)
summary(dados)
EWR + JFK +LGA
EWR + JFK +LGA/3
(EWR + JFK +LGA)/3
dados[dados$ponto_condensacao > 41.44,]$origem
unique(dados[dados$ponto_condensacao > 41.44,]$origem)
table(dados[dados$ponto_condensacao > 41.44,]$origem)
dados[dados$ponto_condensacao > 41.44 & dados$mes == 3,]
table(dados[dados$ponto_condensacao > 41.44 & dados$mes == 3,]$origem)
table(dados[dados$ponto_condensacao > 41.44 & dados$mes == 3 & dados$dia == 20,]$origem)
dados[dados$ponto_condensacao > 41.44 & dados$mes == 3 & dados$dia == 20,]
table(dados[dados$ponto_condensacao > 41.44 & dados$mes == 3 & dados$dia == 1,]$origem)
table(dados[dados$ponto_condensacao > 41.44 & dados$mes == 3 & dados$dia == 10,]$origem)
#
dados[dados$ponto_condensacao > 41.44 & dados$mes == 3,]
table(dados[dados$ponto_condensacao > 41.44 & dados$mes == 3 & dados$dia == 11,]$origem)
data <- dados[dados$dia == 4 & dados$mes == 2,]
dados <- data.frame(dados,periodo)
# Classificando os periodos do dia ----------------------------------------
periodo <- NULL
for(i in 1:length(dados$hora)){
if(dados$hora[i] >= 0 & dados$hora[i] <6){
periodo[i] = "Madrugada"
} else if(dados$hora[i] >= 6 & dados$hora[i] <12){
periodo[i] = "Manhã"
} else if(dados$hora[i] >= 12 & dados$hora[i] <18){
periodo[i] = "Tarde"
}else {periodo[i] = "Noite"}
}
dados <- data.frame(dados,periodo)
data <- dados[dados$dia == 4 & dados$mes == 2,]
data[data$periodo == 'Manhã']
manha <- data[data$periodo == 'Manhã',]
max(manha$temperatura)
mean(manha$ponto_condensacao)
manha$origem
unique(manha$origem)
table(manha$origem)
min(manha$umidade)
